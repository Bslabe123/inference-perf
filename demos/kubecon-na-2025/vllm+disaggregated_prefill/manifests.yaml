
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: llama3-8b-vllm-inference-server
  name: llama3-8b-vllm-deployment
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama3-8b-vllm-inference-server
  template:
    metadata:
      labels:
        ai.gke.io/inference-server: vllm
        ai.gke.io/model: LLaMA3_8B
        app: llama3-8b-vllm-inference-server
        examples.ai.gke.io/source: blueprints
    spec:
      containers:
      - args:
        - "--model=$(MODEL_ID)"
        - "--kv-transfer-config='{"kv_connector":"P2pNcclConnector","kv_role":"kv_producer","kv_rank":0,"kv_parallel_size":1}'"
        command:
        - python3
        - "-m"
        - vllm.entrypoints.openai.api_server
        env:
        - name: MODEL_ID
          value: meta-llama/Meta-Llama-3-8B
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: hf_api_token
              name: hf-secret
        image: vllm/vllm-openai:v0.8.5
        name: inference-server
        ports:
        - containerPort: 8000
          name: metrics
        - containerPort: 8100
          name: prefill
        readinessProbe:
          failureThreshold: 60
          httpGet:
            path: "/health"
            port: 8000
          periodSeconds: 10
        resources:
          limits:
            nvidia.com/gpu: 1
          requests:
            nvidia.com/gpu: 1
        volumeMounts:
        - mountPath: "/dev/shm"
          name: dshm
      - args:
        - "--model=$(MODEL_ID)"
        - "--kv-transfer-config='{"kv_connector":"P2pNcclConnector","kv_role":"kv_consumer","kv_rank":1,"kv_parallel_size":1}'"
        command:
        - python3
        - "-m"
        - vllm.entrypoints.openai.api_server
        env:
        - name: MODEL_ID
          value: meta-llama/Meta-Llama-3-8B
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: hf_api_token
              name: hf-secret
        image: vllm/vllm-openai:v0.8.5
        name: inference-server
        ports:
        - containerPort: 8000
          name: metrics
        - containerPort: 8200
          name: decode
        readinessProbe:
          failureThreshold: 60
          httpGet:
            path: "/health"
            port: 8000
          periodSeconds: 10
        resources:
          limits:
            nvidia.com/gpu: 1
          requests:
            nvidia.com/gpu: 1
        volumeMounts:
        - mountPath: "/dev/shm"
          name: dshm
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-a100
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: llama3-8b-vllm-inference-server
  name: llama3-8b-vllm-service
  namespace: test-ns
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: llama3-8b-vllm-inference-server
  type: ClusterIP
---
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  labels:
    app: llama3-8b-vllm-inference-server
  name: vllm-podmonitoring
  namespace: test-ns
spec:
  endpoints:
  - interval: 15s
    path: "/metrics"
    port: metrics
  selector:
    matchLabels:
      app: llama3-8b-vllm-inference-server
  targetLabels:
    metadata:
    - pod
    - container
    - node
